{"ast":null,"code":"import _objectSpread from \"/home/farrux/java/bot_admin_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EXAMPLES_COUNTER_PLUS_ONE } from './constants';\nexport function counterPlusOne() {\n  return {\n    type: EXAMPLES_COUNTER_PLUS_ONE\n  };\n}\nexport function useCounterPlusOne() {\n  var dispatch = useDispatch();\n  var count = useSelector(function (state) {\n    return state.examples.count;\n  });\n  var boundAction = useCallback(function () {\n    return dispatch(counterPlusOne());\n  }, [dispatch]);\n  return {\n    count: count,\n    counterPlusOne: boundAction\n  };\n}\n\n__signature__(useCounterPlusOne, \"useDispatch{dispatch}\\nuseSelector{count}\\nuseCallback{boundAction}\", function () {\n  return [useDispatch, useSelector];\n});\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case EXAMPLES_COUNTER_PLUS_ONE:\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(counterPlusOne, \"counterPlusOne\", \"/home/farrux/java/bot_admin_dashboard/src/features/examples/redux/counterPlusOne.js\");\n  reactHotLoader.register(useCounterPlusOne, \"useCounterPlusOne\", \"/home/farrux/java/bot_admin_dashboard/src/features/examples/redux/counterPlusOne.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/farrux/java/bot_admin_dashboard/src/features/examples/redux/counterPlusOne.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/farrux/java/bot_admin_dashboard/src/features/examples/redux/counterPlusOne.js"],"names":["useCallback","useDispatch","useSelector","EXAMPLES_COUNTER_PLUS_ONE","counterPlusOne","type","useCounterPlusOne","dispatch","count","state","examples","boundAction","reducer","action"],"mappings":";;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,yBAAT,QAA0C,aAA1C;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD;AAED,OAAO,SAASG,iBAAT,GAA6B;AAClC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,KAAK,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeF,KAAnB;AAAA,GAAN,CAAzB;AACA,MAAMG,WAAW,GAAGX,WAAW,CAAC;AAAA,WAAMO,QAAQ,CAACH,cAAc,EAAf,CAAd;AAAA,GAAD,EAAmC,CAACG,QAAD,CAAnC,CAA/B;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASJ,IAAAA,cAAc,EAAEO;AAAzB,GAAP;AACD;;cANeL,iB;UACGL,W,EACHC,W;;;AAMhB,OAAO,SAASU,OAAT,CAAiBH,KAAjB,EAAwBI,MAAxB,EAAgC;AACrC,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKF,yBAAL;AACE,+BACKM,KADL;AAEED,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAc;AAFvB;;AAKF;AACE,aAAOC,KAAP;AARJ;AAUD;;;;;;;;;;0BAzBeL,c;0BAMAE,iB;0BAQAM,O","sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EXAMPLES_COUNTER_PLUS_ONE } from './constants';\n\nexport function counterPlusOne() {\n  return {\n    type: EXAMPLES_COUNTER_PLUS_ONE,\n  };\n}\n\nexport function useCounterPlusOne() {\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.examples.count);\n  const boundAction = useCallback(() => dispatch(counterPlusOne()), [dispatch]);\n\n  return { count, counterPlusOne: boundAction };\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case EXAMPLES_COUNTER_PLUS_ONE:\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}