{"ast":null,"code":"import _regeneratorRuntime from \"/home/farrux/java/bot_admin_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/farrux/java/bot_admin_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { strapi } from \"../../axios\";\nexport var loginAction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataObj) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return strapi.login(dataObj.email, dataObj.password);\n\n          case 2:\n            data = _context.sent;\n            // const time = new Date(data.created).getTime() + data.ttl * 1000;\n            // localStorage.setItem('token', data.id);\n            // localStorage.setItem('expiresOn', time)\n            localStorage.setItem('user', JSON.stringify(data.user));\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAction(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(loginAction, \"loginAction\", \"/home/farrux/java/bot_admin_dashboard/src/features/auth/query.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/farrux/java/bot_admin_dashboard/src/features/auth/query.js"],"names":["strapi","loginAction","dataObj","login","email","password","data","localStorage","setItem","JSON","stringify","user"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AAGA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJF,MAAM,CAACG,KAAP,CAAaD,OAAO,CAACE,KAArB,EAA4BF,OAAO,CAACG,QAApC,CADI;;AAAA;AACjBC,YAAAA,IADiB;AAGvB;AACA;AACA;AACAC,YAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAI,CAACK,IAApB,CAA7B;AANuB,6CAOhBL,IAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;;;;;;;0BAAMA,W","sourcesContent":["import { strapi } from \"../../axios\";\n\n\nexport const loginAction = async (dataObj) => {\n    const data = await strapi.login(dataObj.email, dataObj.password);\n\n    // const time = new Date(data.created).getTime() + data.ttl * 1000;\n    // localStorage.setItem('token', data.id);\n    // localStorage.setItem('expiresOn', time)\n    localStorage.setItem('user', JSON.stringify(data.user));\n    return data;\n}"]},"metadata":{},"sourceType":"module"}